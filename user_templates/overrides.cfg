############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. Also, keep in mind
# that it will not be erased when updating the config using moonraker
# and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double SKR config)
#> Toolhead CANboard MCUs are called "toolhead"
#> ERCF MCUs are called "ercf" 

# ------------------------------------------------------------------------------------------


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

[heater_bed]
sensor_type: Generic 3950

#--------------------------------#
#   Z DIRECTION CHANGE EXAMPLE   #
#--------------------------------#

# This is just an example of how to do a basic override of
# one entry of a [section] like here just change the direction
# by adding a ! in front of the pin. But you can override
# everything in the same way!

[stepper_z]
dir_pin: mcu:Z_DIR
position_max: 240
homing_speed: 8
second_homing_speed: 3

[stepper_z1]
dir_pin: !mcu:Z1_DIR

[stepper_z2]
dir_pin: mcu:Z2_DIR

[stepper_z3]
dir_pin: !mcu:Z3_DIR


#-------------------------#
#   TOOLHEAD MCU board    #
#-------------------------#

# Those overrides are automatically added when you select a CANbus
# toolhead MCU during the installation process. They should provide a
# good base to work with. Feel free to adapt to your board if needed!

[extruder]
step_pin: toolhead:E_STEP
dir_pin: toolhead:E_DIR
enable_pin: !toolhead:E_ENABLE
heater_pin: toolhead:E_HEATER
sensor_pin: toolhead:E_TEMPERATURE
sensor_type: Generic 3950
pullup_resistor: 2200
rotation_distance: 52.731
max_extrude_cross_section: 50.0
max_extrude_only_distance: 500
pressure_advance: 0.0380

[tmc2209 extruder]
uart_pin: toolhead:E_TMCUART
run_current: 0.50   # 0.45

[probe]
pin: ^toolhead:PROBE_INPUT
sample_retract_dist: 2.0
samples_tolerance: 0.0075
samples_tolerance_retries: 4

[fan]
pin: toolhead:PART_FAN

[heater_fan hotend_fan]
pin: toolhead:E_FAN

[stepper_x]
endstop_pin: ^toolhead:X_STOP
position_endstop: 304.5
position_max: 304.5
homing_speed: 50

[stepper_y]
position_endstop: 305
position_max: 305
homing_speed: 50

[neopixel status_leds]
pin: toolhead:STATUS_NEOPIXEL

[neopixel caselight]
chain_count: 72
color_order: GRBW
initial_WHITE: 0.0

[manual_stepper gear_stepper]
endstop_pin: ^ercf:ERCF_STOP			# Comment if using physical endstop switch (default)

[tmc2209 manual_stepper selector_stepper]
diag_pin: ^ercf:SELECTOR_DIAG     # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 75                 # 255 is most sensitive value, 0 is least sensitive 90

[manual_stepper selector_stepper]
endstop_pin: tmc2209_selector_stepper:virtual_endstop  # Uncomment for sensorless selector homing

[quad_gantry_level]
points:
	50,50
	50,250
	250,250
	250,50

[temperature_sensor Chamber]
sensor_type: Generic 3950
min_temp: 0
max_temp: 100
gcode_id: C

[input_shaper]
# Supported shapers: zv, mzv, zvd, ei, 2hump_ei, 3hump_ei
shaper_freq_x: 86.4
shaper_type_x: 3hump_ei
shaper_freq_y: 46.4
shaper_type_y: mzv

